
#define _CRT_SECURE_NO_WARNINGS
//// 用库函数，求字符串长度
//#include<stdio.h>
//#include<string.h>
//int main()
//{
//	char arr[] = "abc";
//	int len = strlen(arr);
//	printf("len = %d \n"  ,len);
//	return 0;
//}
//自定义函数，有临时变量
//#include<stdio.h>
//int my_strlen(char * str)
//{
//	int count = 0;
//	while (*str != '\0')
//	{
//		str++;
//		count++;
//	}
//		return count;
//}
//int main()
//{
//	char arr[] = "abc";
//	int len = my_strlen(arr);
//	printf("len = %d \n" , len);
//	return 0;
//}

//递归的方法(不用创建临时变量)
//#include<stdio.h>
//int my_strlen(char * str)
//{
//	if (*str != '\0')
//		return 1 + my_strlen(str + 1);
//	else
//		return 0;
//}
//int main()
//{
//	char arr[] = "abc";
//	int len = my_strlen(arr);
//	printf("len = %d \n " , len);
//
//	return 0;
//}

//求n的阶乘(循环)
//#include<stdio.h>
//int fac(int n)
//{
//	int i = 0;
//	int ret = 1;
//	for (i = 1; i <= n; i++)
//	{
//		ret = ret*i;
//	}
//	return ret;
//}
//int main()
//{
//	printf("《计算阶乘》\n");
//	printf("请输入一个值：");
//	int n = 0;
//	scanf("%d " , &n);
//	int ret = fac(n);
//	printf("ret = %d " , ret);
//	return 0;
//}

//求n的阶乘（递归）
//#include<stdio.h>
//int Fac(int n)
//{
//	int ret = 0;
//	if (n <= 1)
//		return 1;
//	else
//		return n*Fac(n - 1);
//}
//int main()
//{
//	int ret = 0;
//	int n = 0;
//	scanf("%d " ,&n);
//	ret = Fac(n);
//	printf("ret  = %d " ,ret);
//	return 0;
//
//}

////求第n个斐波那契数。斐波那契数第三个数 = 前两个数只和，以此内推（递归，不合适）
//#include<stdio.h>
//int count = 0;
//int Fib(int n)
//{
//	if (n == 2)//1 1 2 3 
//	{
//		count++;  //测试第2个斐波那契数的计算次数
//	}
//	if (n <= 2)
//		return 1; 
//	else
//		return Fib(n - 1) + Fib(n - 2);
//}
//int main()
//{
//	printf("《计算第n个斐波那契数》\n");
//	printf("请输入一个数：");
//	int ret = 0;
//	int n = 0;//
//	scanf("%d" , &n);
//	ret = Fib(n);
//	printf("斐波那契数为： %d \n"  ,ret);
//	printf("count = %d" ,count );
//	return 0;
//}


//求斐波那契数（循环）
#include<stdio.h>
int Fib(int n)
{
	int a = 1;
	int b = 1; 
	int c = 1;
	while (n>2)
	{
		c = a + b;
		a = b;
		b = c;
		n--;
	}
	return c;
}
int main()
{
	int ret = 0;
	printf("请输入一个值:");
	int n = 0;
	scanf("%d", &n);
	ret = Fib(n);
	printf("%d" ,ret);

	return 0;
}
